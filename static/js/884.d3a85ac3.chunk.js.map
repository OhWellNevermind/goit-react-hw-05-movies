{"version":3,"file":"static/js/884.d3a85ac3.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,yFACRC,EAAAA,EAAAA,IAAA,iEACqCJ,EADrC,gCACoEE,GACzF,CACEG,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,OAOzBC,EAAOD,EAASC,KAPS,kBAQxB,CAAEC,QAASD,EAAKC,QAASC,YAAaF,EAAKE,cARnB,2CAAH,wDAWjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BX,EAD/B,oBADK,cACtBM,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAQdK,EAAkB,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCX,EADvC,oBADS,cAC1BM,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,sDAQlBM,EAAqB,mCAAG,WAAMF,GAAN,uFACZP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCX,EADvC,oBADY,cAC7BM,EAD6B,yBAK5BA,EAASC,MALmB,2CAAH,sDAQrBO,EAAkB,mCAAG,WAAOC,EAAOb,EAAMC,GAApB,uFACTC,EAAAA,EAAAA,IAAA,0DAC8BW,EAD9B,oBAC+Cf,EAD/C,gCAC8EE,GACnG,CACEG,OAAQF,EAAWE,SAJS,cAC1BC,EAD0B,yBAOzB,CACLE,QAASF,EAASC,KAAKC,QACvBC,YAAaH,EAASC,KAAKE,cATG,2CAAH,yD,0HCuC/B,UAvEqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,KAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAiB7C,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BjB,EAAAA,EAAAA,IAAeW,GAF1C,OAEUf,EAFV,OAGIY,EAASZ,GAHb,uDAKIc,EAAe,KAAMd,SAASsB,QALlC,6EADc,uBAAC,WAAD,wBAWdC,EAED,GAAE,KAGD,+BACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAMC,GAAIP,EAAV,qBACiB,MAAhBJ,GACC,cAAGY,UAAU,OAAb,gCAEA,4BACE,yBACId,EAAMe,aAGN,gBACED,UAAU,sBACVE,IAAG,8CAAyChB,EAAMe,aAClDE,IAAI,MALN,gBAAKH,UAAU,kCAAf,yBAUJ,uBAAId,EAAMkB,SACV,uBAAIlB,EAAMmB,gBACV,wCAAgBnB,EAAMoB,iBACtB,sCAAcpB,EAAMqB,aACpB,gBAAIP,UAAU,aAAd,mBAEGd,EAAMsB,QACLtB,EAAMsB,OAAOC,KAAI,SAAAC,GACf,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAM9B,GACvB,QAEL,2BACE,yBACE,SAAC,KAAD,CAAMmB,GAAG,OAAT,yBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAGJ,0BACE,SAAC,KAAD,aAOb,C","sources":["js/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '18ad1afa22a39e3c497cf86bc3da3983';\n\nexport const fetchLatestMovies = async (page, controller) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=en-US&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  const data = response.data;\n  return { results: data.results, total_pages: data.total_pages };\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCastById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieReviewsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async (query, page, controller) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return {\n    results: response.data.results,\n    total_pages: response.data.total_pages,\n  };\n};\n","import { fetchMovieById } from 'js/api';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Container } from '../components/Container';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [errorStatus, setErrorStatus] = useState(200);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const response = await fetchMovieById(movieId);\n        setMovie(response);\n      } catch (error) {\n        setErrorStatus(error.response.status);\n        return;\n      }\n    }\n\n    fetchMovie();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <Container>\n        <Link to={backLinkHref}>Go Back</Link>\n        {errorStatus === 404 ? (\n          <p className=\"pt-4\">Details not found</p>\n        ) : (\n          <div>\n            <div>\n              {!movie.poster_path ? (\n                <div className=\"w-[300px] h-[400px] text-center\">No Image</div>\n              ) : (\n                <img\n                  className=\"w-[300px] h-[400px]\"\n                  src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n                  alt=\"\"\n                />\n              )}\n            </div>\n\n            <p>{movie.title}</p>\n            <p>{movie.release_date}</p>\n            <p>User Score: {movie.vote_average}</p>\n            <p>Overview: {movie.overview}</p>\n            <ul className=\"flex gap-5\">\n              Genres\n              {movie.genres &&\n                movie.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n            </ul>\n            <ul>\n              <li>\n                <Link to=\"cast\">See cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">See reviews</Link>\n              </li>\n            </ul>\n            <div>\n              <Outlet />\n            </div>\n          </div>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchLatestMovies","page","controller","axios","signal","response","data","results","total_pages","fetchMovieById","id","fetchMovieCastById","fetchMovieReviewsById","fetchMoviesByQuery","query","useState","movie","setMovie","errorStatus","setErrorStatus","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","status","fetchMovie","to","className","poster_path","src","alt","title","release_date","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}