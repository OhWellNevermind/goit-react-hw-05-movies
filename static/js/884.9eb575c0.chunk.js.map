{"version":3,"file":"static/js/884.9eb575c0.chunk.js","mappings":"+SAEMA,EAAU,mCAEHC,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,yFACRC,EAAAA,EAAAA,IAAA,gEACoCJ,EADpC,gCACmEE,GACxF,CACEG,OAAQF,EAAWE,SAJQ,cACzBC,EADyB,OAOzBC,EAAOD,EAASC,KAPS,kBAQxB,CAAEC,QAASD,EAAKC,QAASC,YAAaF,EAAKE,cARnB,2CAAH,wDAWjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,oBAC+BX,EAD/B,oBADK,cACtBM,EADsB,yBAKrBA,EAASC,MALY,2CAAH,sDAQdK,EAAkB,mCAAG,WAAMD,GAAN,uFACTP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCX,EADvC,oBADS,cAC1BM,EAD0B,yBAKzBA,EAASC,MALgB,2CAAH,sDAQlBM,EAAqB,mCAAG,WAAMF,GAAN,uFACZP,EAAAA,EAAAA,IAAA,6CACiBO,EADjB,4BACuCX,EADvC,oBADY,cAC7BM,EAD6B,yBAK5BA,EAASC,MALmB,2CAAH,sDAQrBO,EAAkB,mCAAG,WAAOC,EAAOb,EAAMC,GAApB,uFACTC,EAAAA,EAAAA,IAAA,0DAC8BW,EAD9B,oBAC+Cf,EAD/C,gCAC8EE,GACnG,CACEG,OAAQF,EAAWE,SAJS,cAC1BC,EAD0B,yBAQzB,CACLE,QAASF,EAASC,KAAKC,QACvBC,YAAaH,EAASC,KAAKE,cAVG,2CAAH,yD,0HC2B/B,UA3DqB,WAAO,IAAD,IACzB,GAA0BO,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAY7C,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBf,EAAAA,EAAAA,IAAeS,GADxC,OACQb,EADR,OAEEY,EAASZ,GAFX,4CADc,uBAAC,WAAD,wBAMdoB,EAED,GAAE,KAGD,UAAC,IAAD,YACE,SAAC,KAAD,CAAMC,GAAIN,EAAV,sBACA,4BACE,yBACIJ,EAAMW,aAGN,gBACEC,UAAU,sBACVC,IAAG,8CAAyCb,EAAMW,aAClDG,IAAI,MALN,gBAAKF,UAAU,kCAAf,yBAUJ,uBAAIZ,EAAMe,SACV,uBAAIf,EAAMgB,gBACV,wCAAgBhB,EAAMiB,iBACtB,sCAAcjB,EAAMkB,aACpB,gBAAIN,UAAU,aAAd,mBAEGZ,EAAMmB,QACLnB,EAAMmB,OAAOC,KAAI,SAAAC,GACf,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAM3B,GACvB,QAEL,2BACE,yBACE,SAAC,KAAD,CAAMgB,GAAG,OAAT,yBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,+BAGJ,0BACE,SAAC,KAAD,WAKT,C","sources":["js/api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '18ad1afa22a39e3c497cf86bc3da3983';\n\nexport const fetchLatestMovies = async (page, controller) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  const data = response.data;\n  return { results: data.results, total_pages: data.total_pages };\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieCastById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMovieReviewsById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async (query, page, controller) => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}&language=en-US&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return {\n    results: response.data.results,\n    total_pages: response.data.total_pages,\n  };\n};\n","import { fetchMovieById } from 'js/api';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Container } from '../components/Container';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const response = await fetchMovieById(movieId);\n      setMovie(response);\n    }\n\n    fetchMovie();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Container>\n      <Link to={backLinkHref}>Go Back</Link>\n      <div>\n        <div>\n          {!movie.poster_path ? (\n            <div className=\"w-[300px] h-[400px] text-center\">No Image</div>\n          ) : (\n            <img\n              className=\"w-[300px] h-[400px]\"\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              alt=\"\"\n            />\n          )}\n        </div>\n\n        <p>{movie.title}</p>\n        <p>{movie.release_date}</p>\n        <p>User Score: {movie.vote_average}</p>\n        <p>Overview: {movie.overview}</p>\n        <ul className=\"flex gap-5\">\n          Genres\n          {movie.genres &&\n            movie.genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n        </ul>\n        <ul>\n          <li>\n            <Link to=\"cast\">See cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">See reviews</Link>\n          </li>\n        </ul>\n        <div>\n          <Outlet />\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchLatestMovies","page","controller","axios","signal","response","data","results","total_pages","fetchMovieById","id","fetchMovieCastById","fetchMovieReviewsById","fetchMoviesByQuery","query","useState","movie","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","fetchMovie","to","poster_path","className","src","alt","title","release_date","vote_average","overview","genres","map","genre","name"],"sourceRoot":""}